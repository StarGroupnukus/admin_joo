"""empty message

Revision ID: 7cb482d0824c
Revises: ceee97e4a45d
Create Date: 2025-08-06 19:33:06.811935

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "7cb482d0824c"
down_revision: Union[str, None] = "ceee97e4a45d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_rate_limits_tier_id", table_name="rate_limits")
    op.drop_constraint("fk_users_tier_id_tiers", "users", type_="foreignkey")
    op.drop_column("users", "tier_id")
    op.drop_table("rate_limits")
    op.drop_table("tiers")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users", sa.Column("tier_id", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_foreign_key(
        "fk_users_tier_id_tiers", "users", "tiers", ["tier_id"], ["id"]
    )
    op.create_table(
        "rate_limits",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("path", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("limit", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("period", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("tier_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "deleted_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "is_deleted",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["tier_id"], ["tiers.id"], name="fk_rate_limits_tier_id_tiers"
        ),
        sa.PrimaryKeyConstraint("id", name="pk_rate_limits"),
        sa.UniqueConstraint("name", name="uq_rate_limits_name"),
    )
    op.create_index("ix_rate_limits_tier_id", "rate_limits", ["tier_id"], unique=False)
    op.create_table(
        "tiers",
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "deleted_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "is_deleted",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="pk_tiers"),
        sa.UniqueConstraint("name", name="uq_tiers_name"),
    )
    # ### end Alembic commands ###
